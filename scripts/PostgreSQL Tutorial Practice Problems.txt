PostgreSQL Tutorial Practice Questions

Using Northwind Database with PgAdmin or Mode

Fundamentals:

SELECT statement with clauses:

SELECT: Select all customer_id, company_name, contact_name
	SELECT customer_id, company_name, contact_name
	FROM customers
	ORDER BY customer_id;
SELECT DISTINCT: Select all distinct customer_id from orders
	SELECT DISTINCT ON (customer_id) customer_id, order_id, employee_id
	FROM orders
	ORDER BY customer_id, order_id, employee_id;
ORDER BY: Which supplier has the most purchased products
	SELECT p.supplier_id, s.company_name, COUNT(p.product_id)
	FROM products p
	INNER JOIN order_details o ON o.product_id = p.product_id
	INNER JOIN suppliers s ON s.supplier_id = p.supplier_id
	GROUP BY p.supplier_id, s.company_name
	ORDER BY COUNT(p.product_id) DESC;	
WHERE: Select all customer_id, company_name, contact_name where country is Germany
	SELECT customer_id, company_name, contact_name
	FROM customers
	WHERE country = 'Germany'
LIMIT: SELECT top 10 customers by spending
FETCH: SELECT top 10 customers by spending
GROUP BY sets: SELECT employee_id, total revenue brought in. GROUP BY employee_id
HAVING: SELECT employee_id, total revenue brought in. GROUP BY employee_id. HAVING total revenue greater than 10,000

JOINS:

INNER JOIN: SELECT employee_id, total revenue brought in. GROUP BY employee_id
LEFT JOIN: Are there any employees that have not brought in revenue? Could narrow focus to specific months or years
FULL OUTER JOIN: employee_id, customer_id, are there people who haven't provided any revenue to the company?
CROSS JOIN: SELECT all produts and cross join all customers, add spending
UNION: SELECT all suppliers, names UNION all shippers, names
INTERSECT: show the intersect of customers who have bought products from category 1 and category 2
EXCEPT: show all customers who have purchased from category 1 except those who live in Japan
NATURAL JOIN

IN: SELECT employee_id that were hired in 1965
BETWEEN: SELECT employee_id that were hired in 1965
LIKE: SELECT employee_id that have first names that start with 'Da' or end with 'a'
IS NULL: Are there anyn employees that have not produced revenue?
ANY: SELECT employee_id that were hired after the first hired employee
ALL: SELECT employee_id that were hired in 1965. Not hired in 1965.
EXISTS: 
NOT EXISTS: 

CUBE: GROUPING by city, region, postal_code, country
ROLLUP: GROUPING by city, region, postal_code, country. How do these results differ from CUBE?

Database management:
INSERT:
INSERT multiple:
UPDATE:
UPDATE JOIN:
DELETE:
DELETE JOIN:
Upsert:


Advanced:

Recursion:show managers and all direct reports chain.